
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD COLON COMMA FINAL_DELIMITER INIT_DELIMITER MLINE_COMMENT NUMBER OLINE_COMMENT X_COORD Y_COORDconfig : INIT_DELIMITER statements FINAL_DELIMITERstatements : statement\n                  | statements statementstatement : add_statement\n                 | newlineadd_statement : ADD X_COORD COLON NUMBER COMMA Y_COORD COLON NUMBERnewline : '
    
_lr_action_items = {'INIT_DELIMITER':([0,],[2,]),'$end':([1,8,],[0,-1,]),'ADD':([2,3,4,5,6,9,16,],[7,7,-2,-4,-5,-3,-6,]),'FINAL_DELIMITER':([2,3,4,5,6,9,16,],[-7,8,-2,-4,-5,-3,-6,]),'X_COORD':([7,],[10,]),'COLON':([10,14,],[11,15,]),'NUMBER':([11,15,],[12,16,]),'COMMA':([12,],[13,]),'Y_COORD':([13,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'config':([0,],[1,]),'statements':([2,],[3,]),'statement':([2,3,],[4,9,]),'add_statement':([2,3,],[5,5,]),'newline':([2,3,],[6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> config","S'",1,None,None,None),
  ('config -> INIT_DELIMITER statements FINAL_DELIMITER','config',3,'p_config','parser.py',7),
  ('statements -> statement','statements',1,'p_statements','parser.py',11),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',12),
  ('statement -> add_statement','statement',1,'p_statement','parser.py',19),
  ('statement -> newline','statement',1,'p_statement','parser.py',20),
  ('add_statement -> ADD X_COORD COLON NUMBER COMMA Y_COORD COLON NUMBER','add_statement',8,'p_add_statement','parser.py',25),
  ('newline -> <empty>','newline',0,'p_newline','parser.py',37),
]
